version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: costprint-postgres-test
    environment:
      POSTGRES_DB: costprint
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data_test:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Redis Cache (Optional)
  redis:
    image: redis:7-alpine
    container_name: costprint-redis-test
    ports:
      - "6379:6379"
    volumes:
      - redis_data_test:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Test message to verify setup works
  test:
    image: nginx:alpine
    container_name: costprint-test
    ports:
      - "3000:80"
    volumes:
      - ./test-page.html:/usr/share/nginx/html/index.html:ro
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres_data_test:
    driver: local
  redis_data_test:
    driver: local

networks:
  app-network:
    driver: bridge
