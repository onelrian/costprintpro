# Use the official Rust image as a parent image
FROM rust:1.77 as builder

# Set the working directory
WORKDIR /app

# Copy the Cargo.toml and Cargo.lock files
COPY backend/Cargo.toml backend/Cargo.lock ./

# Create a dummy main.rs to build dependencies
RUN mkdir src && echo "fn main() {}" > src/main.rs

# Build dependencies (this will be cached)
RUN cargo build --release
RUN rm src/main.rs

# Copy the source code
COPY backend/src ./src

# Build the application
RUN cargo build --release

# Runtime stage
FROM debian:bookworm-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    libssl3 \
    libpq5 \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create app user
RUN useradd -m -u 1001 appuser

# Set the working directory
WORKDIR /app

# Copy the binary from builder stage
COPY --from=builder /app/target/release/costprint-backend /app/costprint-backend

# Change ownership to app user
RUN chown -R appuser:appuser /app
USER appuser

# Expose the port
EXPOSE 8080

# Set environment variables
ENV RUST_LOG=info
ENV PORT=8080
ENV BIND_ADDRESS=0.0.0.0:8080

# Run the binary
CMD ["./costprint-backend"]
